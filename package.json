{
  "name": "solana-coin-flipper",
  "version": "1.0.0",
  "private": true,
  "dependencies": {
    "@coral-xyz/anchor": "^0.29.0",
    "@playwright/mcp": "^0.0.35",
    "@project-serum/anchor": "^0.26.0",
    "@solana/wallet-adapter-base": "^0.9.23",
    "@solana/wallet-adapter-react": "^0.15.35",
    "@solana/wallet-adapter-react-ui": "^0.9.35",
    "@solana/wallet-adapter-wallets": "^0.19.32",
    "@solana/web3.js": "^1.87.6",
    "@switchboard-xyz/solana.js": "^3.2.5",
    "@tailwindcss/forms": "^0.5.3",
    "@tanstack/react-query": "^5.86.0",
    "@tanstack/react-table": "^8.21.3",
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "@types/bs58": "^4.0.4",
    "@types/jest": "^27.5.2",
    "@types/papaparse": "^5.3.16",
    "@types/react": "^18.2.6",
    "@types/react-dom": "^18.2.4",
    "@types/react-window": "^1.8.8",
    "ajv": "^8.17.1",
    "autoprefixer": "^10.4.14",
    "broadcast-channel": "^4.20.2",
    "bs58": "^6.0.0",
    "daisyui": "^4.0.0",
    "date-fns": "^2.30.0",
    "eventemitter3": "^5.0.1",
    "js-sha256": "^0.11.1",
    "lucide-react": "^0.542.0",
    "papaparse": "^5.4.0",
    "postcss": "^8.4.21",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-hot-toast": "^2.4.0",
    "react-router-dom": "^6.8.1",
    "react-scripts": "5.0.1",
    "react-swipeable": "^7.0.2",
    "react-window": "^1.8.8",
    "recharts": "^2.8.0",
    "rpc-websockets": "^9.1.3",
    "socket.io-client": "^4.5.0",
    "tailwindcss": "^3.3.0",
    "tweetnacl": "^1.0.3",
    "typescript": "^5.9.2",
    "web-vitals": "^2.1.4",
    "zustand": "^4.5.5"
  },
  "devDependencies": {
    "@craco/craco": "^7.1.0",
    "@playwright/test": "^1.55.0",
    "@types/node": "^24.3.0",
    "@typescript-eslint/eslint-plugin": "^5.57.1",
    "@typescript-eslint/parser": "^5.57.1",
    "assert": "^2.1.0",
    "browserify-zlib": "^0.2.0",
    "buffer": "^6.0.3",
    "cross-env": "^7.0.3",
    "crypto-browserify": "^3.12.1",
    "eslint": "^8.37.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-import-resolver-typescript": "^3.5.3",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jest": "^27.2.1",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "https-browserify": "^1.0.0",
    "os-browserify": "^0.3.0",
    "path-browserify": "^1.0.1",
    "playwright": "^1.55.0",
    "prettier": "^2.8.7",
    "process": "^0.11.10",
    "socket.io": "^4.8.1",
    "stream-browserify": "^3.0.0",
    "stream-http": "^3.2.0",
    "url": "^0.11.4",
    "util": "^0.12.5",
    "vm-browserify": "^1.1.2"
  },
  "scripts": {
    "start": "set NODE_OPTIONS=--max-old-space-size=8192 && craco start",
    "build": "cross-env NODE_OPTIONS=\"--max-old-space-size=8192\" craco build",
    "test": "craco test",
    "eject": "react-scripts eject",
    "lint": "eslint src --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint src --ext .js,.jsx,.ts,.tsx --fix",
    "format": "prettier --write src/**/*.{js,jsx,ts,tsx,css,md,json} --config .prettierrc",
    "test:anchor": "anchor test",
    "deploy:devnet": "anchor build && anchor deploy --provider.cluster devnet && ts-node --project scripts/tsconfig.json scripts/deploy.ts",
    "deploy:mainnet": "anchor build && anchor deploy --provider.cluster mainnet && ANCHOR_PROVIDER_CLUSTER=mainnet-beta ts-node --project scripts/tsconfig.json scripts/deploy.ts",
    "deploy:build": "anchor build",
    "deploy:program": "anchor deploy --provider.cluster devnet",
    "deploy:init": "ts-node --project scripts/tsconfig.json scripts/deploy.ts",
    "deploy:init:help": "ts-node --project scripts/tsconfig.json scripts/deploy.ts --help",
    "deploy:verify": "ts-node --project scripts/tsconfig.json scripts/pre-deploy-check.ts",
    "pre-deploy-check": "ts-node --project scripts/tsconfig.json scripts/pre-deploy-check.ts",
    "pre-deploy-check:mainnet": "ts-node --project scripts/tsconfig.json scripts/pre-deploy-check.ts mainnet-beta",
    "validate-vrf-config": "ts-node --project scripts/tsconfig.json scripts/validate-vrf-config.ts",
    "vrf-config:validate": "ts-node --project scripts/tsconfig.json scripts/validate-vrf-config.ts",
    "vrf-config:help": "echo 'VRF Configuration Commands:\n  npm run validate-vrf-config - Validate VRF account configuration\n  See VRF_PRODUCTION_SETUP_GUIDE.md for setup instructions'",
    "deploy:verify:enhanced": "ts-node --project scripts/tsconfig.json scripts/enhanced-deploy-check.ts",
    "deploy:verify:enhanced:mainnet": "ts-node --project scripts/tsconfig.json scripts/enhanced-deploy-check.ts mainnet-beta",
    "pre-production-check": "ts-node --project scripts/tsconfig.json scripts/enhanced-deploy-check.ts mainnet-beta",
    "verify-vrf-integration": "ts-node --project scripts/tsconfig.json scripts/verify-vrf-integration.ts",
    "verify-vrf-integration:mainnet": "REACT_APP_NETWORK=mainnet-beta ts-node --project scripts/tsconfig.json scripts/verify-vrf-integration.ts",
    "test:real-vrf-setup": "ts-node --project scripts/tsconfig.json scripts/test-real-vrf-setup.ts",
    "test:real-vrf-setup:staging": "NODE_ENV=staging ts-node --project scripts/tsconfig.json scripts/test-real-vrf-setup.ts",
    "calculate-program-authority": "ts-node --project scripts/tsconfig.json scripts/calculate-program-authority.ts"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
